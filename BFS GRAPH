import java.util.*;
public class Main
{
    Scanner sc=new Scanner(System.in);
    public static void addedge(int a[][],int source,int destination){
        a[source][destination]=1;
        a[destination][source]=1;
    }
    public static void addedge(ArrayList<ArrayList<Integer>>adj,int source,int destination){
        adj.get(source).add(destination);
        adj.get(destination).add(source);
    }
    static void printgraph(ArrayList<ArrayList<Integer>> adj){
        for (int i = 0; i < adj.size(); i++) {
            System.out.println("\nAdjacency list of vertex"
                               + i);
            System.out.print("head");
            for (int j = 0; j < adj.get(i).size(); j++) {
                System.out.print(" -> "
                                 + adj.get(i).get(j));
            }
            System.out.println();
        }
    }
    static void printgraph(int a[][],int v){
        for(int i=0;i<v;i++){
            for(int j=0;j<v;j++){
               System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
    }
    public static boolean bfs(ArrayList<ArrayList<Integer>> adj, int src, int dest, int v, int pred[], int dist[]) {
		LinkedList<Integer> queue = new LinkedList<>();
		boolean visited[] = new boolean[v + 1];

		for (int i = 0; i < v; i++) {
			visited[i] = false;
			dist[i] = Integer.MAX_VALUE;
			pred[i] = -1;
		}
		visited[src] = true;
		dist[src] = 0;
		queue.add(src);

		while (!queue.isEmpty()) {
			int cur = queue.remove();
			for (int i = 0; i < adj.get(cur).size(); i++) {
				int neighbour = adj.get(cur).get(i);
				if (visited[neighbour] == false) {
					visited[neighbour] = true;
					dist[neighbour] = dist[cur] + 1;
					pred[neighbour] = cur;
					queue.add(neighbour);

					if (neighbour == dest) {
						System.out.println("Distance between source & destination: " + dist[dest]);
						return true;
					}
				}
			}
		}

		return false;
	}
	public static void main(String[] args) {
	   int v=5;
	   int e=10;
	   int a[][]=new int[v+1][v+1];
	   int pred[]=new int[v];
	   int dest[]=new int[v];
	   ArrayList<ArrayList<Integer>>adj=new ArrayList<ArrayList<Integer>>();
	   for(int i=0;i<=v;i++){
	       adj.add(new ArrayList<Integer>());
	   }
	       addedge(a,0,2);
	       addedge(a,0,4);
	       addedge(a,1,1);
	       addedge(a,1,1);
	       addedge(a,2,3);
	       addedge(a,2,2);
	       addedge(adj,0,1);
	       addedge(adj,0,2);
	       addedge(adj,1,3);
	       addedge(adj,1,4);
	       addedge(adj,2,0);
	       addedge(adj,2,1);
	       printgraph(adj);
	       printgraph(a,v);
	       bfs(adj,0,4,5,pred,dest);
	   }
	
}
